### general settings
product_version: "5.1.10"
ansible_python_interpreter: /usr/bin/python3
ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
product_name: fworch

# installation_mode options:
#   new (default) - assumes that no fworch is installed on the target devices - fails if it finds an installation
#   uninstall     - runs uninstall-fworch.yml
#   upgrade       - installs on top of an existing system preserving any existing data in ldap, database, api
installation_mode: new

### operating system settings
user_id: 60320
fworch_user: "{{ product_name }}"
fworch_group: "{{ fworch_user }}"
fworch_parent_dir: "/usr/local"
fworch_home: "{{ fworch_parent_dir }}/{{ product_name }}"
fworchtest_home: /home/fworchtest
fworch_conf_file: "{{ fworch_home }}/etc/fworch.yaml"
http_proxy: ""
#http_proxy: http://admsrv.int.cactus:3128
https_proxy: "{{ http_proxy }}"
proxy_exceptions: ""
proxy_env:
        http_proxy: "{{ http_proxy }}"
        https_proxy: "{{ https_proxy }}"
        validate_certs: false
test_packages:
  - postgresql-client
  - curl

server_admin: "root@{{ api_ip_address }}"

### database
fworch_db_port: 5432
# fworch_db_host: 10.1.1.83
fworch_db_host: localhost
fworch_db_name: fworchdb
fworch_dbadmin_name: dbadmin

### middleware server 
#middleware_JWT_key_file: "{{ fworch_home }}/etc/secrets/jwt_private.key"
jwt_private_key_file: "{{ fworch_home }}/etc/secrets/jwt_private_key.pem"
jwt_public_key_file: "{{ fworch_home }}/etc/secrets/jwt_public_key.pem"

middleware_hostname: "127.0.0.1"
ldif_changetype: add
middleware_service_name: "{{ product_name }}-middleware"


# middleware web server
middleware_server_name: 127.0.0.1
middleware_web_listener_port: 8888
middleware_uri: "https://{{ middleware_server_name }}:{{ middleware_web_listener_port }}/"
##### application server data
middleware_internal_port: 8880
web_server_name: "{{ middleware_server_name }}"

### database & api
api_service_name: fworch-hasura-docker-api
api_container_name: "{{ product_name }}-api"
api_ip_address: "127.0.0.1"
api_web_port: 9443
#api_hasura_jwt_alg: "HS384"
api_hasura_jwt_alg: "RS256"
api_hasura_jwt_secret: "fake-jwt-secret-for-github-install"
api_uri: "https://{{ api_ip_address }}:{{ api_web_port }}/api/v1/graphql"

### dotnet
dotnet_deb_name: "packages-microsoft-prod.deb"
dotnet_version: "5.0"
dotnet_mode: "Release"
debug_level: "1"
lib_dir: "{{ fworch_home }}/lib/files"

### ldap
random_generated_pw: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters') }}"

### logging
syslog_proto: tcp
syslog_host: localhost
syslog_port: 514
middleware_server_syslog_id: "{{ product_name }}.middleware-server"
ui_syslog_id: "{{ product_name }}-ui"
ldap_syslog_id: slapd
api_log_level: info

### apache: both package and dir name (needed both on ui and api hosts):
web_server_name: apache2
http_conf_dir: /etc/{{ web_server_name }}/sites-available/

################# testing #########################

test_dir: "{{ fworch_home }}/test"
csharp_test_start_dir: "{{ fworch_home }}/test/csharp/FWO_Test"

################# to be removed ###################

### importer test data

sting_fworch_user: itsecorg

# todo: can be moved to vault before project goes public
dbadmin_pwd: "st8chel"
fworch_pwd: "st8chel"
admin_pwd: "fworch.1"
