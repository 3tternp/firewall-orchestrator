- block: 

  - name: create symlink /usr/local/fworch/etc to /etc/fworch
    file:
      src: "{{ fworch_home }}/etc"
      dest: "/etc/{{ product_name }}"
      state: link

  - name: read config file of currently installed product
    include_vars: 
      file: "{{ fworch_conf_file }}"
      remote_src: yes
      name: config
    when: already_installed and installation_mode == "upgrade"

  # - debug: var=config

  - name: get version of currently installed product
    set_fact: 
      old_version: "{{ config.product_version }}"
    when: already_installed and installation_mode == "upgrade"

  - name: write new version of product to config file
    lineinfile:
      path: "{{ fworch_conf_file }}"
      regexp: "^product_version:"
      line: "product_version: {{ product_version }}"
      backup: yes
    when: installation_mode == "upgrade"

  - name: edit central conf file
    blockinfile:
      path: "{{ fworch_conf_file }}"
      create: yes
      block: |
        # general settings
        fworch_home: "{{ fworch_home }}"
        dotnet_mode: "{{ dotnet_mode }}"
        product_version: "{{ product_version }}"
        
        # api
        api_uri: "https://{{ api_ip_address }}:{{ api_web_port }}/api/v1/graphql"
        api_hasura_jwt_alg: "{{ api_hasura_jwt_alg }}"
        
        # auth
        auth_uri: "http://{{ auth_hostname }}:{{ auth_web_listener_port }}"
        # should be auth_uri: "https://{{ auth_hostname }}:{{ auth_web_listener_port }}"
    when: installation_mode != "upgrade"

  become: yes
