
- block:
    - name: Install webserver packages
      package: name={{ item }} state=present
      with_items:
        - "{{ ui_web_server_name }}"

    - name: create ui dir
      file:
        dest: "{{ ui_dir }}"
        state: directory
        owner: "{{ iso_user }}"
        group: "{{ iso_user }}"

    - name: copy Blazor files to frontend target
      copy:
        src: "Blazor"
        dest: "{{ ui_dir }}"
        owner: "{{ iso_user }}"
        group: "{{ iso_user }}"

    - name: copy iso httpd config file to apache target
      template:
        src: "httpd.conf"
        dest: "{{ ui_http_conf_dir }}/itsecorg.conf"
        owner: root
        group: root
        
    - name: enable apache modules proxy proxy_http ssl
      command: "a2enmod proxy proxy_http ssl proxy_wstunnel"

    - name: copy cert creation script to apache target
      script: "apache_create_server_cert.sh" 

    - name: enable itsecorg web site
      shell: "a2ensite itsecorg"

    - name: increase apache timeout to 900 seconds
      lineinfile:
        path: /etc/apache2/apache2.conf
        line: "Timeout 900"

    - name: restart apache
      service:
       name: "{{ ui_web_server_name }}"
       state: restarted     

    - set_fact: distribution_version="{{ ansible_facts['distribution_version'] }}"
      when: ansible_facts['distribution']|lower == 'ubuntu'

    - set_fact: distribution_version="{{ ansible_facts['distribution_version'] | regex_replace('\.\d$','') }}"
      when: ansible_facts['distribution']|lower == 'debian'

    - name: get package {{ ui_ms_deb_name }}
      get_url:
        url: "https://packages.microsoft.com/config/{{ ansible_facts['distribution']|lower }}/{{ distribution_version }}/{{ ui_ms_deb_name }}"
        dest: "{{ ui_dir }}/{{ ui_ms_deb_name }}"
        mode: 0644

    - name: install packages-microsoft-prod
      command: "dpkg -i {{ ui_dir }}/{{ ui_ms_deb_name }}"

    - name: remove package file
      file:
        dest: "{{ ui_dir }}/{{ ui_ms_deb_name }}"
        state: absent

    - name: apt update
      apt: update_cache=true

    - name: Install apt-transport-https
      package: name=apt-transport-https state=present

    - name: apt update
      apt: update_cache=true

    - name: Install dotnet-sdk-{{ ui_dotnet_version }}
      package: "name=dotnet-sdk-{{ ui_dotnet_version }} state=present"

    - name: Install dotnet runtime {{ ui_dotnet_version }}
      package: "name=dotnet-runtime-{{ ui_dotnet_version }} state=present"

    - name: copy blazor ui systemd service script
      template:
        src: fworch-blazor-ui.service.j2
        dest: "/lib/systemd/system/{{ ui_service_name }}.service"
        backup: yes
        mode: 0644
        owner: "root"

    - name: make blazor ui run at host startup
      command: "systemctl enable {{ ui_service_name }}"

    - name: start blazor ui
      command: "systemctl start {{ ui_service_name }}"

  become: yes
  environment: "{{ proxy_env }}"
