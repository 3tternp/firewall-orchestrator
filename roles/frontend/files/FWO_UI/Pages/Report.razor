@using BlazorTable
@using FWO.ApiClient
@using FWO.Ui.Data.Api

@inject APIConnection Connection

@page "/report"

<h3>Test-Report</h3>

<button class="btn btn-primary m-2" @onclick="GenerateTestReport">Generate Report</button>

<div class="m-2">
    <input type="text" class="form-control" placeholder="Filter" />
</div>

@*<div class="card m-2">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h4 class="d-inline-flex align-items-center">
                Filter
                <button class="btn btn-dark btn-sm ml-3 oi @FilterButtonCollapse" @onclick="CollapseButtonClicked"></button>
            </h4>
            <h4 class="btn-group">
                <button class="btn btn-success btn-sm">Add</button>
                <button class="btn btn-danger btn-sm">Remove</button>
            </h4>
        </div>
        <div class="collapse card-body @FilterCollapseCSS">
            <div class="m-2 d-flex flex-wrap">
                @foreach (DataTable CurrentFilterDataTable in FilterDataTables)
                {
                    <Filter Data="CurrentFilterDataTable"></Filter>
                }
            </div>
        </div>
    </div>*@

<div class="card m-2 shadow">
    <div class="card-body">

        @foreach (Management management in Managements)
        {
            <h3>@management.Name</h3>
            <hr />

            foreach (Device device in management.Devices)
            {
                <h4>@device.Name</h4>

                <Table TableItem="Rule" Items="device.Rules" ShowSearchBar="true" PageSize="20" ColumnReorder="true">
                    <Column TableItem="Rule" Title="ID" Field="@(x => x.Id)" Sortable="true" Filterable="true" />
                    <Column TableItem="Rule" Title="Number" Field="@(x => x.Number)" Sortable="true" Filterable="true" />
                    <Column TableItem="Rule" Title="Source" Field="@(x => x.Source)" Sortable="true" Filterable="true">
                        <Template>
                            <p>@(context.SourceNegated ? "not " : "") @(context.Source)</p>
                        </Template>
                    </Column>
                    <Column TableItem="Rule" Title="From" Field="@(x => x.Froms)" Sortable="true" Filterable="true">
                        <Template>
                            @{
                                List<string> fromsIp = new List<string>();

                                foreach (NetworkObjectWrapper from in context.Froms)
                                {
                                    fromsIp.Add(from.Content.IP);
                                }

                                <p>@string.Join(", ", fromsIp)</p>
                            }
                        </Template>
                    </Column>
                    <Column TableItem="Rule" Title="Destination" Field="@(x => x.Destination)" Sortable="true" Filterable="true">
                        <Template>
                            <p>@(context.DestinationNegated ? "not " : "") @(context.Destination)</p>
                        </Template>
                    </Column>
                    <Column TableItem="Rule" Title="Tos" Field="@(x => x.Tos)" Sortable="true" Filterable="true">
                        <Template>
                            @{
                                List<string> TosIp = new List<string>();

                                foreach (NetworkObjectWrapper to in context.Tos)
                                {
                                    TosIp.Add(to.Content.IP);
                                }

                                <p>@string.Join(", ", TosIp)</p>
                            }
                        </Template>
                    </Column>
                    <Column TableItem="Rule" Title="Services" Field="@(x => x.Service)" Sortable="true" Filterable="true">
                        <Template>
                            <p>@(context.ServiceNegated ? "not " : "") @(context.Service)</p>
                        </Template>
                    </Column>
                    <Column TableItem="Rule" Title="Services" Field="@(x => x.Services)" Sortable="true" Filterable="true">
                        <Template>
                            @{
                                List<string> servicesName = new List<string>();

                                foreach (ServiceWrapper service in context.Services)
                                {
                                    servicesName.Add(service.Content.Name);
                                }

                                <p>@string.Join(", ", servicesName)</p>
                            }
                        </Template>
                    </Column>
                    <Column TableItem="Rule" Title="Action" Field="@(x => x.Action)" Sortable="true" Filterable="true" />
                    <Column TableItem="Rule" Title="Track" Field="@(x => x.Track)" Sortable="true" Filterable="true" />
                    <Column TableItem="Rule" Title="Disabled" Field="@(x => x.Disabled)" Sortable="true" Filterable="true">
                        <Template>
                            <div class="oi @(context.Disabled? "oi-check" : "oi-x")"></div>
                        </Template>
                    </Column>
                    <Pager ShowPageNumber="true"></Pager>
                </Table>
            }
        }

    </div>
</div>

@code
{
    string FilterCollapseCSS = "show";
    string FilterButtonCollapse = "oi-minus";

    private Management[] Managements = new Management[0];

    private async Task GenerateTestReport(MouseEventArgs e)
    {
        Managements = await Connection.SendQuery<Management>(Queries.Rules);
    }

    private void CollapseButtonClicked(MouseEventArgs e)
    {
        FilterCollapseCSS = (FilterCollapseCSS == "") ? "show" : "";
        FilterButtonCollapse = (FilterButtonCollapse == "oi-plus") ? "oi-minus" : "oi-plus";
    }
}
