@using BlazorTable
@using FWO.Api.Client
@using FWO.Backend.Data.API

@page "/report"

@inject APIConnection Connection

<h3>Test-Report</h3>

<button class="btn btn-primary m-2" @onclick="GenerateTestReport">Generate Report</button>

<div class="m-2">
    <input type="text" class="form-control" placeholder="Filter" />
</div>

@*<div class="card m-2">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h4 class="d-inline-flex align-items-center">
            Filter
            <button class="btn btn-dark btn-sm ml-3 oi @FilterButtonCollapse" @onclick="CollapseButtonClicked"></button>
        </h4>
        <h4 class="btn-group">
            <button class="btn btn-success btn-sm">Add</button>
            <button class="btn btn-danger btn-sm">Remove</button>
        </h4>
    </div>
    <div class="collapse card-body @FilterCollapseCSS">
        <div class="m-2 d-flex flex-wrap">
            @foreach (DataTable CurrentFilterDataTable in FilterDataTables)
            {
                <Filter Data="CurrentFilterDataTable"></Filter>
            }
        </div>
    </div>
</div>*@

<div class="card m-2 shadow">
    <div class="card-body">

        @foreach (Management management in Managements)
        {
            <h3>@management.Name</h3>
            <hr />

            foreach (Device device in management.Devices)
            {
                <h4>@device.Name</h4>

                <Table TableItem="Rule" Items="device.Rules" ShowSearchBar="true" PageSize="20" >
                    <Column TableItem="Rule" Title="ID" Field="@(x => x.Id)" Sortable="true" Filterable="false" Width="15%">
                    </Column>
                    <Column TableItem="Rule" Title="Source" Field="@(x => x.Source)" Sortable="true" Filterable="false" Width="10%" />
                    <Column TableItem="Rule" Title="Destination" Field="@(x => x.Destination)" Sortable="true" Filterable="false" Width="10%" />
                    <Pager ShowPageNumber="true"></Pager>
                </Table>
            }
        }

    </div>
</div>

@code
{
    string FilterCollapseCSS = "show";
    string FilterButtonCollapse = "oi-minus";

    private Management[] Managements = new Management[0];

    private async Task GenerateTestReport(MouseEventArgs e)
    {
        Managements = await Connection.SendQuery<Management>(Queries.Rules);
    }

    private void CollapseButtonClicked(MouseEventArgs e)
    {
        FilterCollapseCSS = (FilterCollapseCSS == "") ? "show" : "";
        FilterButtonCollapse = (FilterButtonCollapse == "oi-plus") ? "oi-minus" : "oi-plus";
    }
}
