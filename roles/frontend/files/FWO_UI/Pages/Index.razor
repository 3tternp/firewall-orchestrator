@page "/"

@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<button @onclick="LogUsername">Log username</button>

<p>@_authMessage</p>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private string _authMessage = "Test";

    private async Task LogUsername()
    {
        var authState = await authenticationStateTask;
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            string jwt = await sessionStorage.GetItemAsync<string>("jwt");
            var handler = new System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler();
            var token = handler.ReadJwtToken(jwt);
            string username = token.Payload.GetValueOrDefault("unique_name").ToString();
            _authMessage = $"{username} is authenticated."; //{user.Identity.Name}
        }
        else
        {
            _authMessage = "The user is NOT authenticated.";
        }
    }
}




