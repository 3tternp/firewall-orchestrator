@using BlazorTable
@using FWO.Api.Data
@using FWO.ApiClient

@page "/settings/import"

@inject APIConnection apiConnection

<h3 class="m-2">Import Status</h3>
<hr />

<div class="m-2">
    <Table class="table table-bordered table-responsive" TableItem="ImportStatus" Items="importStatii" PageSize="0" ColumnReorder="true">
        <Column TableItem="ImportStatus" Title="MgmName" Field="@(x => x.MgmName)" Sortable="true" Filterable="true" />
        <Column TableItem="ImportStatus" Title="Last Import" Field="@(x => x.LastImport[0].StopTime)" Sortable="true" Filterable="true" />
        <Column TableItem="ImportStatus" Title="Success" Field="@(x => x.LastImport[0].SuccessfulImport)" Sortable="true" Filterable="true" />
        <Column TableItem="ImportStatus" Title="Errors" Field="@(x => x.LastImport[0].ImportErrors)" Sortable="true" Filterable="true" />
        <Column TableItem="ImportStatus" Title="Action" Field="(x => x.MgmId)" Sortable="false" Filterable="false">
            <Template>
                <div class="btn-group">
                    <button class="btn btn-sm btn-success" @onclick="() => Details(context)">Details</button>
                    @if (context.LastImport[0].SuccessfulImport == false)
                    {
                        <button class="btn btn-sm btn-primary" @onclick="() => Fallback(context.MgmId)">Fallback</button>
                    }
                </div>
            </Template>
        </Column>
    </Table>
</div>
<PopUp Title="@($"Import Status Details for {actStatus.MgmName}")" Show="@DetailsMode" Large="true" OnClose="() => DetailsMode = false">
    <Body>
        @if (DetailsMode)
        {
            <form>
                <div class="row">
                    <div class="col-sm-3 col-form-label">MgmName:</div>
                    <div class="m-2">@actStatus.MgmName</div>
                </div>
                
                <h6>First Import</h6>
                <div class="row">
                    <div class="col-sm-3 col-form-label-sm">Start:</div>
                    <div class="m-2">@actStatus.FirstImport[0].StartTime</div>
                </div>
                <div class="row">
                    <div class="col-sm-3 col-form-label-sm">Stop:</div>
                    <div class="m-2">@actStatus.FirstImport[0].StopTime</div>
                </div>
                <div class="row">
                    <div class="col-sm-3 col-form-label-sm">Success:</div>
                    <div class="m-2">@actStatus.FirstImport[0].SuccessfulImport</div>
                </div>
                <div class="row">
                    <div class="col-sm-3 col-form-label-sm">Errors:</div>
                    <div class="m-2">@actStatus.FirstImport[0].ImportErrors</div>
                </div>

                <h6>Last Import</h6>
                <div class="row">
                    <div class="col-sm-3 col-form-label-sm">Start:</div>
                    <div class="m-2">@actStatus.LastImport[0].StartTime</div>
                </div>
                <div class="row">
                    <div class="col-sm-3 col-form-label-sm">Stop:</div>
                    <div class="m-2">@actStatus.LastImport[0].StopTime</div>
                </div>
                <div class="row">
                    <div class="col-sm-3 col-form-label-sm">Success:</div>
                    <div class="m-2">@actStatus.LastImport[0].SuccessfulImport</div>
                </div>
                <div class="row">
                    <div class="col-sm-3 col-form-label-sm">Errors:</div>
                    <div class="m-2">@actStatus.LastImport[0].ImportErrors</div>
                </div>
                <div class="row">
                    <div class="col-sm-3 col-form-label-sm">Last Config Change:</div>
                    <div class="m-2">@actStatus.LastImport[0].LastChangeInConfig</div>
                </div>
            </form>
        }
    </Body>
    <Footer>
        <div class="btn-group">
            <button class="btn btn-sm btn-secondary" @onclick="CloseDetails">Ok</button>
        </div>
    </Footer>
</PopUp>

@code 
{
    private List<ImportStatus> importStatii = new List<ImportStatus>();
    private bool DetailsMode = false;
    private ImportStatus actStatus = new ImportStatus();

    protected override async Task OnInitializedAsync()
    {
        importStatii = (await Task.Run(() => apiConnection.SendQueryAsync<ImportStatus[]>(FWO.ApiClient.Queries.DeviceQueries.getImportStatus))).ToList();
    }

    private void Details(ImportStatus status)
    {
        actStatus = status;
        DetailsMode = true;
    }

    private void CloseDetails()
    {
        DetailsMode = false;
    }

    private async Task Fallback(int mgmId)
    {

    }
}
