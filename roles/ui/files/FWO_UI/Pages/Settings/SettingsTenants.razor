@using BlazorTable
@using FWO.Api.Data
@using FWO.ApiClient

@page "/settings/tenants"

@inject APIConnection apiConnection

<h3 class="m-2">Tenants</h3>
<hr />

<div class="m-2">
    <Table class="table table-bordered table-responsive" TableItem="Tenant" Items="tenants" PageSize="0"
        ColumnReorder="true">
        <Column TableItem="Tenant" Title="Name" Field="@(x => x.Name)" Sortable="true" Filterable="true" />
        <Column TableItem="Tenant" Title="Comment" Field="@(x => x.Comment)" Sortable="true" Filterable="true" />
        <Column TableItem="Tenant" Title="Project" Field="@(x => x.Project)" Sortable="true" Filterable="true" />
        <Column TableItem="Tenant" Title="View All Devices" Field="@(x => x.ViewAllDevices)" Sortable="true"
            Filterable="true" />
        <Column TableItem="Tenant" Title="Superadmin" Field="@(x => x.Superadmin)" Sortable="true" Filterable="true" />
        <Column TableItem="Tenant" Title="Devices" Field="@(x => x.TenantDevices)" Sortable="false" Filterable="false">
            <Template>
                @(context.DeviceList())
            </Template>
        </Column>

    </Table>
</div>


@code
{
    [CascadingParameter]
    Action<Exception,string,string,bool> DisplayMessageInUi { get; set; }

    private List<Tenant> tenants = new List<Tenant>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            tenants = (await apiConnection.SendQueryAsync<Tenant[]>(FWO.ApiClient.Queries.AuthQueries.getTenants)).ToList();
        }
        catch (Exception exception)
        {
            DisplayMessageInUi(exception,null,null,true);
        }
    }
}
