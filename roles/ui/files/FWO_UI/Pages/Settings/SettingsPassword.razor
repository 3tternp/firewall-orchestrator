@using FWO.ApiConfig
@using FWO.Middleware.Client
@using FWO.Ui.Services

@page "/settings/password"
@attribute [Authorize(Roles = "admin, reporter, reporter-viewall, workflow-user, workflow-admin, auditor")]

@inject UserConfig userConfig
@inject MiddlewareClient middlewareClient

<h3>Change Password</h3>
<hr />

<form class="d-flex flex-column">
    <div class="form-group row">
        <label for="oldPw" class="col-sm-2 col-form-label col-form-label-sm">Old Password*:</label>
        <div class="col-sm-6">
            <input id="oldPw" type="password" class="form-control form-control-sm" @bind="oldPassword" />
        </div>
    </div>
    <div class="form-group row">
        <label for="oldPw" class="col-sm-2 col-form-label col-form-label-sm">New Password*:</label>
        <div class="col-sm-6">
            <input id="oldPw" type="password" class="form-control form-control-sm" @bind="newPassword1" />
        </div>
    </div>
    <div class="form-group row">
        <label for="oldPw" class="col-sm-2 col-form-label col-form-label-sm">New Password*:</label>
        <div class="col-sm-6">
            <input id="oldPw" type="password" class="form-control form-control-sm" @bind="newPassword2" />
        </div>
    </div>
</form>
<AuthorizeView Roles="admin, reporter, reporter-viewall, workflow-user, workflow-admin">
    <button class="btn btn-sm btn-primary" @onclick:preventDefault="true" @onclick="ChangePassword">Change Password</button>
</AuthorizeView>

@code
{
    [CascadingParameter]
    Action<Exception, string, string, bool> DisplayMessageInUi { get; set; }

    private string oldPassword = "";
    private string newPassword1 = "";
    private string newPassword2 = "";

    protected override void OnInitialized()
    {

    }

    private async Task ChangePassword()
    {
        try
        {
            string errorMsg = await (new PasswordChanger(middlewareClient)).ChangePassword(oldPassword, newPassword1, newPassword2, userConfig);
            if(errorMsg == "")
            {
                DisplayMessageInUi(null, "Change Password", "password changed", false);
            }
            else
            {
                DisplayMessageInUi(null, "Change Password error", errorMsg, true);
            }
        }
        catch (Exception exception)
        {
            DisplayMessageInUi(exception, "Change Password error", exception.Message, true);
        }
    }
}
