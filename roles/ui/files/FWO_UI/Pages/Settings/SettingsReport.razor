@using BlazorTable
@using FWO.ApiClient
@using FWO.ApiConfig
@using FWO.ApiConfig.Data;
@using FWO.Ui.Data.API
@using FWO.Ui.Services

@page "/settings/report"

@inject APIConnection apiConnection

<h3>Report Settings</h3>
<hr />

<form class="form-inline">
    <label for="rulesPerFetch" class="col-form-label mr-2">Rules per fetch:</label>
    <div class="col-sm-2">
        <input id="rulesPerFetch" type="text" class="form-control form-control-sm" @bind="rulesPerFetch" />
    </div>
    <button class="btn btn-sm btn-primary" @onclick="SaveRulesPerFetch">Save</button>
</form>

@code
{
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    ConfigDbAccess config;
    int rulesPerFetch;

     protected override async Task OnInitializedAsync()
    {
        AuthenticationState authState = await authenticationStateTask;
        UiUsersDbAccess uiUser = new UiUsersDbAccess(authState, apiConnection);
        config = new ConfigDbAccess(apiConnection, uiUser.UiUser.DbId);
        try
        {
            rulesPerFetch = Int32.Parse(config.Get(ConfigDbAccess.kRulesPerFetch));
        }
        catch(Exception exception)
        {
            Log.WriteError("Read Config", $"Key not found or could not convert value to int: taking value 10 ", exception);
            rulesPerFetch = 10;
        }
    }

    private async Task SaveRulesPerFetch()
    {
        await config.Set(ConfigDbAccess.kRulesPerFetch, rulesPerFetch.ToString());
    }
}
