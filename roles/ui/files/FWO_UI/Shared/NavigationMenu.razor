@using System.Collections.Generic
@using System.Security.Claims
@using FWO.Ui.Data
@using FWO.ApiConfig.Data
@using FWO.ApiConfig

@inject ConfigCollection globalConfig
@inject UserConfigCollection userConfig
@inject IJSRuntime jsRuntime

<nav class="navbar navbar-expand-xl navbar-dark bg-dark shadow w-100">
    <a class="navbar-brand" href="#">
        <!-- <img src="images/FWO_Logo.png" /> -->
        Firewall-Orchestrator v@(globalConfig.productVersion)
    </a>


    <button class="navbar-toggler" type="button" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>

    <div class="navbar-collapse @NavMenuCollapseClass">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item px-2">
                <NavLink class="nav-link" href="/report">
                    <span class="oi oi-spreadsheet"></span> @(userConfig.Translate["reporting"])
                </NavLink>
            </li>
            <li class="nav-item px-2">
                <NavLink class="nav-link" href="#">
                    <span class="oi oi-book"></span> @(userConfig.Translate["documentation"])
                </NavLink>
            </li>
            <li class="nav-item px-2">
                <NavLink class="nav-link" href="#">
                    <span class="oi oi-comment-square"></span> @(userConfig.Translate["request"])
                </NavLink>
            </li>
        </ul>

        <ul class="navbar-nav">
            <li class="nav-item px-2">
                <NavLink class="nav-link" @onclick="@(async () => await jsRuntime.InvokeAsync<object>("newWindow", args: "/test-help"))">
                    <span class="oi oi-info"></span> @(userConfig.Translate["help"])
                </NavLink>
            </li>
            <li class="nav-item px-2">
                <NavLink class="nav-link" href="/settings">
                    <span class="oi oi-cog"></span> @(userConfig.Translate["settings"])
                </NavLink>
            </li>
            <li class="nav-item px-2">
                <NavLink class="nav-link" href="/settings/personal">
                    <span class="oi oi-person"></span> @(authenticationStateTask.Result.User.Identity.Name.ToUpper())
                </NavLink>
            </li>
            <li class="nav-item px-2">
                <NavLink class="nav-link" href="/logout">
                    <span class="oi oi-account-logout"></span> @(userConfig.Translate["logout"])
                </NavLink>
            </li>
        </ul>
    </div>
</nav>

@code
{
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    bool collapseNavMenu = true;

    string NavMenuCollapseClass => (collapseNavMenu ? " collapse" : "");

    protected override void OnInitialized()
    {
        userConfig.OnChange += OnChange;
    }

    void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async void OnChange(object _, EventArgs __) => await InvokeAsync(StateHasChanged);
}
