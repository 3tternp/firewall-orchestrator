@using BlazorTable
@using FWO.Ui.Data.API

@typeparam InputDataType

@if (Data != null)
{
    @foreach (InputDataType obj in Data)
    {
        <Collapse Title="@NameExtractor(obj)" Style="@("primary")" StartToggled="false">
            <Collapse Title="Network Objects" StartToggled="false">
                <Table style="font-size:small" class="table table-bordered table-sm table-responsive" TableItem="NetworkObject" Items="@NetworkObjectExtractor(obj)" PageSize="PageSize" ColumnReorder="true">
                    <Column TableItem="NetworkObject" Title="Name" Field="@(x => x.Name)" Class="word-wrap" />
                    <DetailTemplate TableItem="NetworkObject">
                        <Detail Title="UID" Data=@context.Uid />
                        <Detail Title="IP" Data=@context.IP /> @* ??? (context.IP == context.IP ? context.IP.ToString() : $"{context.IP.ToString()}-{context.IP.ToString()}")*@
                    </DetailTemplate>
                </Table>
            </Collapse>
            <Collapse Title="Services" StartToggled="false">
                <Table style="font-size:small" class="table table-bordered table-sm table-responsive" TableItem="NetworkService" Items="@NetworkServiceExtractor(obj)" PageSize="PageSize" ColumnReorder="true">
                    <Column TableItem="NetworkService" Title="Name" Field="@(x => x.Name)" Class="word-wrap" />
                    <DetailTemplate TableItem="NetworkService">
                        <Detail Title="UID" Data=@context.Uid />
                        <Detail Title="Source Port" Data=@(context.SourcePort == context.SourcePortEnd ? context.SourcePort.ToString() : $"{context.SourcePort.ToString()}-{context.SourcePortEnd.ToString()}") />
                        <Detail Title="Destination Port" Data=@(context.DestinationPort == context.DestinationPortEnd ? context.DestinationPort.ToString() : $"{context.DestinationPort.ToString()}-{context.DestinationPortEnd.ToString()}") />
                        <Detail Title="Code" Data=@context.Code />
                        <Detail Title="Timeout" Data=@context.Timeout.ToString() />
                        <Detail Title="Type" Data=@context.Type.Name />
                        <Detail Title="Comment" Data=@context.Comment />
                        <Detail Title="Protocol" Data=@context.Protocol?.Name />
                    </DetailTemplate>
                </Table>
            </Collapse>
            <Collapse Title="Users" StartToggled="false">
                <Table style="font-size:small" class="table table-bordered table-sm table-responsive" TableItem="NetworkUser" Items="@NetworkUserExtractor(obj)" PageSize="PageSize" ColumnReorder="true">
                    <Column TableItem="NetworkUser" Title="Name" Field="@(x => x.Name)" Class="word-wrap" />
                    <DetailTemplate TableItem="NetworkUser">
                        <Detail Title="UID" Data=@context.Uid />
                        <Detail Title="Real Name" Data=@($"{context.FirstName} {context.LastName}") />
                        <Detail Title="Comment" Data=@context.Comment />
                        <Detail Title="Type" Data=@context.Type.Name />
                    </DetailTemplate>
                </Table>
            </Collapse>
        </Collapse>
    }
}

@code
{
    [Parameter]
    public int PageSize { get; set; }

    [Parameter]
    public IEnumerable<InputDataType> Data { get; set; }

    [Parameter]
    public Func<InputDataType, string> NameExtractor { get; set; }

    [Parameter]
    public Func<InputDataType, IEnumerable<NetworkObject>> NetworkObjectExtractor { get; set; }

    [Parameter]
    public Func<InputDataType, IEnumerable<NetworkService>> NetworkServiceExtractor { get; set; }

    [Parameter]
    public Func<InputDataType, IEnumerable<NetworkUser>> NetworkUserExtractor { get; set; }
}
