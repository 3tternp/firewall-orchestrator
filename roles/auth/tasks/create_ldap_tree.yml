
- name: Check if ldap tree already exists
  shell: "ldapsearch ou=user -x | grep 'ou=user,{{ auth_ldap_path }}' | wc -l"
  register: is_ldap_present_flag

- block:
  - name: Decide on random inspector password
    set_fact:
      ldap_inspector_pw: "{{ openldap_server_rootpw }}"

  - name: Write inspector password to file
    copy:
      content: "{{ ldap_inspector_pw }}"
      dest: "{{ fworch_home }}/etc/secrets/ldap_inspector_pw.txt"
      mode: '0600'
      owner: "{{ fworch_user }}"
      group: "{{ fworch_user }}"

  - name: create ldif directory
    file:
      dest: "{{ auth_server_base_dir }}/ldif"
      state: directory
      owner: "{{ fworch_user }}"
      group: "{{ fworch_user }}"

  - name: copy the ldif templates to system
    template:
      src: "{{ item }}"
      dest: "{{ auth_server_base_dir }}/ldif/{{ item | basename | regex_replace('\\.j2$', '') }}"
    with_fileglob:
      - ../templates/ldif_files/*.j2

  - name: Create organizational unit user
    command: "ldapmodify -H {{ auth_ldap_server_internal }} -D {{ auth_ldap_superuser_name }} -w {{ openldap_server_random_rootpw }} -x -f {{ auth_server_base_dir }}/ldif/add_ou_user.ldif"

  - name: Create organizational unit user/systemuser
    command: "ldapmodify -H {{ auth_ldap_server_internal }} -D {{ auth_ldap_superuser_name }} -w {{ openldap_server_random_rootpw }} -x -f {{ auth_server_base_dir }}/ldif/add_ou_systemuser.ldif"

  - name: Create organizational unit user/operator
    command: "ldapmodify -H {{ auth_ldap_server_internal }} -D {{ auth_ldap_superuser_name }} -w {{ openldap_server_random_rootpw }} -x -f {{ auth_server_base_dir }}/ldif/add_ou_operator.ldif"

  - name: Create common name user/systemuser/admin (GUI admin)
    command: "ldapmodify -H {{ auth_ldap_server_internal }} -D {{ auth_ldap_superuser_name }} -w {{ openldap_server_random_rootpw }} -x -f {{ auth_server_base_dir }}/ldif/add_uid_admin.ldif"

  - name: Create common name user/systemuser/inspector (entitelt to search ldap)
    command: "ldapmodify -H {{ auth_ldap_server_internal }} -D {{ auth_ldap_superuser_name }} -w {{ openldap_server_random_rootpw }} -x -f {{ auth_server_base_dir }}/ldif/add_uid_inspector.ldif"

  - name: set inspector password in ldap
    command: "ldappasswd -s {{ ldap_inspector_pw }} -H {{ auth_ldap_server_internal }} -D {{ auth_ldap_superuser_name }} -w {{ openldap_server_random_rootpw }} -x 'uid=inspector,ou=systemuser,ou=user,{{ auth_ldap_path }}'"

  - name: delete ldif files
    file:
      path: "{{ auth_server_base_dir }}/ldif"
      state: absent
  when: is_ldap_present_flag.stdout == "0"
  become: yes

  # todo: set password via ldappasswd to have a proper hash
