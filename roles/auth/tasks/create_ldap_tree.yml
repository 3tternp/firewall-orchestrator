
- name: Check if ldap tree already exists
  shell: "ldapsearch ou=user -x | grep 'ou=user,{{ auth_ldap_path }}' | wc -l"
  register: is_ldap_present_flag

- block:
  - name: copy the ldif templates to system
    template:
      src: "{{ item }}"
      dest: "{{ auth_server_base_dir }}/ldif/{{ item | basename | regex_replace('\.j2$', '') }}"
    with_fileglob:
      - "ldif_files/*.j2"

  - name: Create organizational unit user
    command: "ldapmodify -H {{ auth_ldap_server_internal }} -D {{ auth_ldap_superuser_name }} -w {{ openldap_server_random_rootpw }} -x -f {{ auth_server_base_dir }}/ldif/add_ou_user.ldif"

  - name: Create organizational unit user/systemuser
    command: "ldapmodify -H {{ auth_ldap_server_internal }} -D {{ auth_ldap_superuser_name }} -w {{ openldap_server_random_rootpw }} -x -f {{ auth_server_base_dir }}/ldif/add_ou_systemuser.ldif"

  - name: Create organizational unit user/operator
    command: "ldapmodify -H {{ auth_ldap_server_internal }} -D {{ auth_ldap_superuser_name }} -w {{ openldap_server_random_rootpw }} -x -f {{ auth_server_base_dir }}/ldif/add_ou_operator.ldif.j2"

  - name: Create common name user/systemuser/admin (GUI admin)
    command: "ldapmodify -H {{ auth_ldap_server_internal }} -D {{ auth_ldap_superuser_name }} -w {{ openldap_server_random_rootpw }} -x -f {{ auth_server_base_dir }}/ldif/add_uid_admin.ldif"
  when: is_ldap_present_flag.stdout == "0"

  # todo: set password via ldappasswd to have a proper hash

- name: delete ldif files
  file:
    path: "{{ auth_server_base_dir }}/ldif
    state: absent
