# source: https://github.com/michelp/pgjwt

- set_fact: api_home="{{ fworch_home }}/api"

- name: find out installed postgres version
  script: "get_pg_version.sh"
  register: pg_version_result
  changed_when: false

- name: set fact pg_version
  set_fact:
     pg_version: "{{ pg_version_result.stdout }}"

- name: set fact postgresql_dev_package
  set_fact:
     postgresql_dev_package: "{{ postgresql_dev_package_prefix }}-{{ pg_version }}"

- name: install make package for installing pgjwt extension
  package:
    name: make
    state: present
  become: yes
  environment: "{{proxy_env}}"

- name: install development package for postgresql (needed for pgcrypto jwt auth)
  package:
    name: "{{ postgresql_dev_package }}"
    state: present
  become: yes
  environment: "{{proxy_env}}"

- name: install test package for postgresql
  package:
    name: "{{ postgresql_test_package }}"
    state: present
  become: yes
  environment: "{{proxy_env}}"

- name: create extension pgcrypto for jwt auth
  command: 'psql -d {{ fworch_db_name }} -c "DO \$do\$ BEGIN IF NOT EXISTS (SELECT * FROM pg_extension WHERE extname = ''pgcrypto'') THEN CREATE EXTENSION pgcrypto; END IF; END \$do\$"'
  become: yes
  become_user: postgres

- name: check if /usr/share/postgresql/{{pg_version}}/extension/pgtap.control exists
  stat:
    path: "/usr/share/postgresql/{{pg_version}}/extension/pgtap.control"
  register: pgtap_control

- name: create pgtap extension for running unit tests on database
  command: 'psql -d {{ fworch_db_name }} -c "DO \$do\$ BEGIN IF NOT EXISTS (SELECT * FROM pg_extension WHERE extname = ''pgtap'') THEN CREATE EXTENSION pgtap; END IF; END \$do\$"'
  become: yes
  become_user: postgres
  when: pgtap_control.stat.exists == True

- name: copy pgjwt extension files
  copy:
     src: pgjwt
     dest: "{{ fworch_home }}/install/database"
  become: yes
       
- name: install pgjwt extension
  command: "make install"
  args: chdir="{{ fworch_home }}/install/database/pgjwt"
  become: yes

# todo: decide if we also need updates for extensions (or simply drop and re-create?)
- name: create pgjwt extension in iso database
  command: 'psql -d {{ fworch_db_name }} -c "DO \$do\$ BEGIN IF NOT EXISTS (SELECT * FROM pg_extension WHERE extname = ''pgjwt'') THEN CREATE EXTENSION pgjwt; END IF; END \$do\$"'
  become: yes
  become_user: postgres

- name: test pgjwt extension
  command: 'psql -d {{ fworch_db_name }} -c "\i test_pgjwt.sql"'
  args: chdir="{{ fworch_home }}/install/database/pgjwt"
  become: yes
  become_user: postgres
  when: pgtap_control.stat.exists == True
# todo: display result of tests and exit on errors
