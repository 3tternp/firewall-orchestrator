- block:  
    - name: make sure secrets dir exists
      file:
        path: "{{ fworch_home }}/etc/secrets"
        state: directory
        mode: "0700"
        owner: "{{ fworch_user }}"
        group: "{{ fworch_user }}"

    - name: set default value for ldif_changetype
      set_fact:
        ldif_changetype: add
        openldap_server_random_rootpw: "{{ root_password.stdout }}"   # Manager pwd from openldap installation

    - name: check if there already is an ldap connection in DB
      shell: psql -d {{ fworch_db_name | quote }} -c "DO \$do\$ BEGIN IF NOT EXISTS (SELECT * FROM ldap_connection) THEN RAISE DEBUG 'LDAP Connection already present'; END IF; END \$do\$"
      become: yes
      become_user: postgres
      register: ldap_conn_present

    - name: change value for ldif_changetype to modify if ldap conn alread exists
      set_fact:
        ldif_changetype: modify
      when: ldap_conn_present.stdout == 'LDAP Connection already present'

    # - name: Set new random {{ auth_ldap_internal_readonly_user }} password every time
    #   set_fact:
    #     ldap_inspector_pw: "{{ random_generated_pw }}"


  #  - set_fact: api_home="{{ fworch_home }}/api"

   - name: generate jwt secret
     shell: "< /dev/urandom tr -dc a-f0-9 | head -c${1:-512}"
     register: secret512

   - set_fact: api_hasura_jwt_secret="{{ secret512.stdout }}"

   - name: write api_hasura_jwt_secret into file for reference
     lineinfile:
        path: "{{ fworch_home }}/etc/secrets/jwt_private.key"
        line: "{{ jwt_secret.stdout }}"
        regexp: ".*"    # match every line and replace it (only one line expected)
        create: yes
        mode: "0600"
        owner: "{{ fworch_user }}"
        group: "{{ fworch_user }}"
        backup: yes

   - name: generate ldap local readonly secret
     shell: "< /dev/urandom tr -dc a-f0-9 | head -c${1:-32}"
     register: secret32

   - set_fact: api_ldap_inspector_pw="{{ secret32.stdout }}"

  become: yes
