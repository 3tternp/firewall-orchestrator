---
- hosts: backends
  become: yes
  tasks:
     - name: install package postgresql
       package:
        name: "{{ postgresql_package }}"
        state: present

     - name: edit postgresql.conf
       blockinfile:
        path: "{{ pgconfdir }}/postgresql.conf"
        block: |
          # listen_addresses = 'localhost,1.2.3.4'  # wenn IP des Servers die 1.2.3.4 ist
          # syslog 
          log_destination = 'syslog'
          syslog_facility = 'LOCAL6'
          syslog_ident = 'postgres-ITSecOrg'
          client_min_messages = log
          log_min_messages = info
        backup: yes
     - name: edit pg_hba.conf
       blockinfile:
        path: "{{ pgconfdir }}/pg_hba.conf"
        backup: yes
        insertbefore: '# IPv4 local connections:'
        block: |
          host    all         dbadmin             127.0.0.1/32          md5
          # host    all         dbadmin             0.0.0.0/0              md5
          # host    all         dbadmin             {{ ansible_host }}/32          md5
          host    all         itsecorg            127.0.0.1/32           trust
          host    all         +dbbackupusers      127.0.0.1/32           trust
          # bei lokalem importer:
          host    all         +configimporters    127.0.0.1/32           trust
          host    all         confexporter        127.0.0.1/32           trust
          host    all         textreader          127.0.0.1/32           trust
          # bei lokalem Webfrontend:
          host    all         +secuadmins         127.0.0.1/32           md5
          host    all         +reporters          127.0.0.1/32           md5
          # bei abgesetztem Webfrontend:
          # host    all         +secuadmins       <webserver-ip>/32          md5
          # host    all         +reporters        <webserver-ip>/32          md5
          # bei remote-importer:
          # host    all         +configimporters   <importer-ip>/32          trust
        
     - name: edit postgresql.conf listener
       lineinfile:
        path: "{{ pgconfdir }}/postgresql.conf"
        backrefs: yes
        regexp: '^#?\s*(listen_addresses\s*=\s*)(.*)'
        line: '\1''{{ ansible_host }},localhost'''
        backup: yes
     - name: reload postgres service
       service:
         name: "{{ postgresql_package }}"
         state: restarted
     - name: copy iso files to backend target
       copy:
        src: "../../../install"
        dest: "{{ iso_home }}"
        owner: itsecorg
        group: itsecorg
        
     - name: make db install scripts executable
       file:
        path: "{{ iso_home }}/install/database/db-install-scripts"
        mode: "u+x,g+x,o+x"
        recurse: yes
  
     - include_tasks: tablespace_as_root_prereq.yml
       when: table_space is defined

          
     - name: setting itscorg db password
       lineinfile: 
        path: "{{ iso_home }}/install/database/db-install-scripts/iso-set-vars.sh"
        backrefs: yes
        regexp: '^\s*(ISODBPW\s*=)'
        line: '\1"{{ itsecorg_pwd }}"'
        backup: yes
       
     - name: setting dbadmin password
       lineinfile: 
        path: "{{ iso_home }}/install/database/db-install-scripts/iso-set-vars.sh"
        backrefs: yes
        regexp: '^\s*(DBADMINPW\s*=)'
        line: '\1"{{ dbadmin_pwd }}"'
        backup: yes        
       
     - name: setting admin webuser password
       lineinfile: 
        path: "{{ iso_home }}/install/database/db-install-scripts/iso-set-vars.sh"
        backrefs: yes
        regexp: '^\s*(ADMINPW\s*=)'
        line: '\1"{{ admin_pwd }}"'
        backup: yes        

     
#     - name: create tablespace directory 
#       command:  "mkdir -p {{ table_space }}"
#       when: table_space is defined
#
#     - name: chown tablespace directory to postgres 
#       command:  "chown postgres:postgres {{ table_space }}"
#       when: table_space is defined
#
#     - name: change db create command if using a specific tablespace location
#       lineinfile: 
#       path: "{{ iso_home }}/install/database/db-install-scripts/db-init1-user-and-structure.sh"
#       backrefs: yes
#       regexp: '^(\$DBCREATE_CMD -c \"CREATE DATABASE $ISODB)(\" \| \$OUT)$'
#       line: '\1 TABLESPACE={{ iso_tablespace}} \2'

#     for separate backend servers:
#     - name: edit postgresql.conf listener
#       lineinfile:
#        path: "{{ pgconfdir }}/postgresql.conf"
#        backrefs: yes
#        regexp: '^#?\s*(listen_addresses\s*=\s*)(.*)'
#        line: '\1''{{ ansible_host }},localhost'''
#        backup: yes
#     - name: add syslog:log_destination for postgres
#       lineinfile:
#        path: "{{ pgconfdir }}/postgresql.conf"
#        backrefs: yes
#        regexp: '(#?)\s*(log_destination\s*=\s*)'
#        line: '\2''syslog'''
#        backup: yes
#     - name: add syslog:syslog_facility for postgres
#       lineinfile:
#        path: "{{ pgconfdir }}/postgresql.conf"
#        backrefs: yes
#        regexp: '(#?)\s*(syslog_facility\s*=\s*)'
#        line: '\2''LOCAL6'''
#        backup: yes
#     - name: add syslog:syslog_ident for postgres
#       lineinfile:
#        path: "{{ pgconfdir }}/postgresql.conf"
#        backrefs: yes
#        regexp: '(#?)\s*(syslog_ident\s*=\s*)'
#        line: '\2''postgres-ITSecOrg'''
#        backup: yes
#     - name: add syslog:syslog client_min_messages for postgres
#       lineinfile:
#        path: "{{ pgconfdir }}/postgresql.conf"
#        backrefs: yes
#        regexp: '(#?)\s*(client_min_messages\s*=\s*)'
#        line: '\2''log'''
#        backup: yes
#     - name: add syslog:syslog log_min_messages for postgres
#       lineinfile:
#        path: "{{ pgconfdir }}/postgresql.conf"
#        backrefs: yes
#        regexp: '(#?)\s*(log_min_messages\s*=\s*)'
#        line: '\2''info'''
#        backup: yes