- block:
     - name: create django models from existing database for some tables
       #shell: "cd {{ api_home }}; {{ python_binary }} manage.py inspectdb >{{ app_dir }}/models.py"
       #shell: "cd {{ api_home }}; {{ python_binary }} manage.py inspectdb management device client stm_dev_typ object rule >{{ app_dir }}/models.py"
       shell: "cd {{ api_home }}; {{ python_binary }} manage.py inspectdb management device client stm_dev_typ >{{ app_dir }}/models.py"

     - name: make all tables managable by django
       replace:
         path:  "{{ app_dir }}/models.py"
         regexp: 'managed = False'
         replace: 'managed = True'
         backup: yes

     - name: label all models with iso for routing purposes
       replace:
          path: "{{ app_dir }}/models.py"
          regexp: '(\s+)db_table = ''(\w+)''$'
          replace: '\1db_table = ''\2''\n\1app_label = ''{{ api_app_name }}'''
          backup: yes

     - name: models remove abs_change_id fields from changelog tables to avoid error Model cant have more than one AutoField.
       lineinfile:
         path:  "{{ app_dir }}/models.py"
         state: absent
         regexp: 'abs_change_id = '
         backup: yes

     - name: models replace max_length -1 by max_length 1000
       replace:
          path: "{{ app_dir }}/models.py"
          regexp: 'max_length=-1'
          replace: 'max_length=1000'
          backup: yes
    
     - name: models replace max_length 0 by max_length 1000
       replace:
          path: "{{ app_dir }}/models.py"
          regexp: 'max_length=0'
          replace: 'max_length=1000'
          backup: yes

     - name: models add related_name for new_obj
       replace:
          path: "{{ app_dir }}/models.py"
          regexp: 'new_(\w+) = models\.ForeignKey\(''(\w+)''\, models\.DO_NOTHING\,'
          replace: 'new_\1 = models.ForeignKey(''\2'', models.DO_NOTHING, related_name=''cl_new_\1'','
          backup: yes

     - name: models add related_name for old_obj
       replace:
          path: "{{ app_dir }}/models.py"
          regexp: 'old_(\w+) = models\.ForeignKey\(''(\w+)''\, models\.DO_NOTHING\,'
          replace: 'old_\1 = models.ForeignKey(''\2'', models.DO_NOTHING, related_name=''cl_old_\1'','
          backup: yes

     - name: models add related_name for import_admin
       replace:
          path: "{{ app_dir }}/models.py"
          regexp: 'import_admin = models\.ForeignKey\(''(\w+)''\, models\.DO_NOTHING\,'
          replace: 'import_admin = models.ForeignKey(''\1'', models.DO_NOTHING, related_name=''cl_import_admin'','
          backup: yes

     - name: models add related_name for doku_admin
       replace:
          path: "{{ app_dir }}/models.py"
          regexp: 'doku_admin = models\.ForeignKey\(''(\w+)''\, models\.DO_NOTHING\,'
          replace: 'doku_admin = models.ForeignKey(''\1'', models.DO_NOTHING, related_name=''cl_doku_admin'','
          backup: yes
  become: yes
  become_user: "{{ iso_user }}"

