# this playbook sets up a connection to cactus test firewall sting
- set_fact: importer_hostname="{{ ansible_hostname }}"          #  this only works for importer = backend

- block:
    # todo: convert the following into a single \i file.sql command:
    - name: insert sting-mgmt
      postgresql_query:
        db: "{{ fworch_db_name }}"
        query: >
          DO $do$ BEGIN 
          IF NOT EXISTS (SELECT * FROM management WHERE mgm_name='sting-mgmt') THEN 
          insert into management (dev_typ_id,mgm_name,ssh_private_key,ssh_hostname,ssh_port,ssh_user,do_not_import,config_path,importer_hostname)
          VALUES (9,'sting-mgmt','{{ sting_fworch_user_password }}','{{ sting_ip }}','{{ sting_port }}','{{ sting_fworch_user }}',false, '','{{ importer_hostname }}');
          END IF; END $do$ 

    - name: insert sting-gw
      postgresql_query:
        db: "{{ fworch_db_name }}"
        query: >
          DO $do$ BEGIN 
          IF NOT EXISTS (SELECT * FROM device WHERE dev_name='sting-gateway') THEN
          insert into device (mgm_id,dev_name,dev_rulebase,dev_typ_id) 
          VALUES ((SELECT mgm_id FROM management WHERE mgm_name='sting-mgmt'),'sting-gateway','cactus_Security_neu',9);
          END IF; END $do$ 

    - name: insert layered test gw
      postgresql_query:
        db: "{{ fworch_db_name }}"
        query: >
          DO $do$ BEGIN 
          IF NOT EXISTS (SELECT * FROM device WHERE dev_name='layered-test-gw') THEN 
          insert into device (mgm_id,dev_name,dev_rulebase,dev_typ_id) 
          VALUES ((SELECT mgm_id FROM management WHERE mgm_name='sting-mgmt'),'layered-test-gw','FirstLayer shared with inline layer',9);
          END IF; END $do$ 

  become: yes
  become_user: postgres
