
- name: change value for auth_change_local_ldap if ldap conn already exists to prevent re-creation errors
  set_fact:
    auth_change_local_ldap: "no"
  when: ldap_conn_present.stdout >= "1"

- debug:
    var:
      - ldap_conn_present
      - auth_change_local_ldap

- name: create ldif directory
  file:
    dest: "{{ auth_server_base_dir }}/ldif"
    state: directory
    owner: "{{ fworch_user }}"
    group: "{{ fworch_user }}"
  become: yes

- name: set add mode for creating ldap tree
  set_fact:
    ldif_changetype: add

- name: copy the ldif templates to system once more (this time for adding entries)
  template:
    src: "{{ item }}"
    dest: "{{ auth_server_base_dir }}/ldif/{{ item | basename | regex_replace('\\.j2$', '') }}"
  with_fileglob:
    - ../templates/tree_*.j2
  become: yes

- name: add tree
  command: "ldapmodify -H {{ auth_ldap_internal_url }} -D {{ auth_ldap_superuser_name }} -w {{ ldap_manager_pwd }} -x -f {{ auth_server_base_dir }}/ldif/tree_{{ item }}.ldif"
  loop:
    - tenant_samples
    - sample_operators
  ignore_errors: yes

- name: delete ldif files
  file:
    path: "{{ auth_server_base_dir }}/ldif"
    state: absent
  become: yes
