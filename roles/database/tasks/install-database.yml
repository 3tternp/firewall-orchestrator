
- block:

  - name: fail upon new installation with existing database
    fail:
      msg: "Error: You choose new installation on a system with existing database {{ fworch_db_name }}"
    when: installation_mode == "new" and db_exists.stdout != "0"

  - name: create postgres user "{{ fworch_dbadmin_name }}"
    postgresql_user: 
      name: "{{ fworch_dbadmin_name }}"
      password: "{{ dbadmin_pwd }}"
      encrypted: yes
      role_attr_flags: CREATEDB,SUPERUSER,CREATEROLE,INHERIT,LOGIN

  - name: create postgres user "{{ fworch_user }}"
    postgresql_user: 
      name: "{{ fworch_user }}"
      password: "{{ fworch_pwd }}"
      encrypted: yes
      role_attr_flags: LOGIN

  # include add-tablespace.yml here

    #  - name: drop database {{ fworch_db_name }}
    #    command: 'psql -c "DROP DATABASE IF EXISTS {{ fworch_db_name }}"'

  - name: create database {{ fworch_db_name }}
    command: 'psql -c "CREATE DATABASE {{ fworch_db_name }}"'
    when: installation_mode == "new" and db_exists.stdout == "0"

    #  - name: create database {{ fworch_db_name }}
    #    postgresql_db:
    #      name: "{{ fworch_db_name }}"
    #      state: present
    #      login_host: "{{ fworch_db_host }}"
    #      login_user: "{{ fworch_dbadmin_name }}"
    #      template: template1

  - name: dummy query to test module functionality
    postgresql_query:
      db: "{{ fworch_db_name }}"
      query: 'select version()'
    register: test_query

  - name: creating {{ fworch_db_name }}-db-model and settings privileges
    command: 'psql -d {{ fworch_db_name }} -c "\i {{ database_install_dir }}/sql/{{ item }}"'
    loop:
      - fworch-db-model.sql
      - fworch-change-to-delete-cascade.sql
    when: installation_mode == "new"

  - name: (re)defines functions and views (idempotent)
    command: 'psql -d {{ fworch_db_name }} -c "\i {{ database_install_dir }}/sql/{{ item }}"'
    loop:
      - fworch-basic-procs.sql
      - fworch-import.sql
      - fworch-import-main.sql
      - fworch-obj-import.sql
      - fworch-obj-refs.sql
      - fworch-svc-import.sql
      - fworch-svc-refs.sql
      - fworch-usr-import.sql
      - fworch-usr-refs.sql
      - fworch-rule-import.sql
      - fworch-rule-refs.sql
      - fworch-zone-import.sql
      - fworch-report.sql
      - fworch-qa.sql
      - fworch-report-basics.sql
      - fworch-views.sql
      - fworch-pre-auth.sql
      - fworch-grants.sql

  - name: add base data to the database
    command: 'psql -d {{ fworch_db_name }} -c "{{ item }}"'
    loop:
      - "\\copy stm_color (color_name,color_rgb) FROM '{{ database_install_dir }}/csv/color.csv' DELIMITER ';' CSV"
      - "\\copy error (error_id,error_lvl,error_txt_ger,error_txt_eng) FROM '{{ database_install_dir }}/csv/error.csv' DELIMITER ';' CSV"
      - "\\copy stm_ip_proto (ip_proto_id,ip_proto_name,ip_proto_comment) FROM '{{ database_install_dir }}/csv/ip-protocol-list.csv' DELIMITER ';' CSV"
      - "\\i {{ database_install_dir }}/sql/fworch-fill-stm.sql"
    when: installation_mode == "new"

  become: yes
  become_user: postgres
