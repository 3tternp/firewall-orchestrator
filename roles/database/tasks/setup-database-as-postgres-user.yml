
- name: copy authentication sql file
  copy:
    src: pre_auth_functions.sql
    dest: "{{ database_install_dir }}/sql"
    owner: "{{ fworch_user }}"
    group: "{{ fworch_user }}"
  become: yes

- block:
  - name: create postgres user "{{ fworch_dbadmin_name }}"
    postgresql_user: 
      name: "{{ fworch_dbadmin_name }}"
      password: "{{ dbadmin_pwd }}"
      encrypted: yes
      role_attr_flags: CREATEDB,SUPERUSER,CREATEROLE,INHERIT,LOGIN

  - name: create postgres user "{{ fworch_user }}"
    postgresql_user: 
      name: "{{ fworch_user }}"
      password: "{{ fworch_pwd }}"
      encrypted: yes
      role_attr_flags: LOGIN

# include add-tablespace.yml here
  - name: create database password file
    copy:
      dest: "{{ fworch_home }}/.pgpass"
      content: |
        "{{ fworch_db_host }}:{{ fworch_db_port }}:{{ fworch_db_name }}:fworch:{{ fworch_pwd }}"
        "{{ fworch_db_host }}:{{ fworch_db_port }}:{{ fworch_db_name }}:{{ fworch_dbadmin_name }}:{{ dbadmin_pwd }}"
        "{{ fworch_db_host }}:{{ fworch_db_port }}:template1:{{ fworch_dbadmin_name }}:{{ dbadmin_pwd }}"

  - name: create new database - drop existing db before when clean_install is set
    import_tasks: db-init1-user-and-structure.yml
    when: clean_install is defined or db_exists.stdout=="0"

  - name: (re)defines functions and views (idempotent)
    import_tasks: db-init2-functions.yml

  - name: add base data to the database (if db was just freshly created or clean_install is set)
    import_tasks: db-init3-fill.yml
    when: clean_install is defined or db_exists.stdout=="0"

  # - name: add local ldap connection
  #   shell: psql -d {{ fworch_db_name | quote }} -c "DO \$do\$ BEGIN IF NOT EXISTS (SELECT * FROM ldap_connection) THEN INSERT INTO ldap_connection (ldap_server, ldap_port, ldap_searchpath_for_users, ldap_tenant_level, ldap_search_user, ldap_search_user_pwd) VALUES ('{{ auth_ldap_server_internal | quote }}', 636, '{{ auth_ldap_std_user_path | quote }}', 1, '{{ auth_ldap_internal_readonly_user | quote }}', 'initial pwd to-be-changed'); END IF; END \$do\$"

  - name: create functions needed during authentication
    command: 'psql -d {{ fworch_db_name }} -c "\i {{ database_install_dir }}/sql/pre_auth_functions.sql"'

  become: yes
  become_user: postgres
