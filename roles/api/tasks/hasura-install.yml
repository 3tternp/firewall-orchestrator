# installs docker and the hasura image in a container

- name: Install packages for python pip3 n virtualenv
  package:
    name: "{{ item }}"
    state: present
  loop:
    - python3-pip
    - python3-virtualenv
  become: yes

- name: install docker sdk for python via pip3
  pip:
    name: docker
  become: yes
  become_user: "{{ fworch_user }}"

- name: read jwt_secret_key from file
  slurp:
    src: "{{ fworch_home }}/etc/secrets/jwt_private.key"
  register: api_hasura_jwt_secret_dict
  become: yes

- name: decode key
  set_fact:
    api_hasura_jwt_secret_decoded: "{{ api_hasura_jwt_secret_dict['content'] | b64decode }}"

- name: remove unwanted and unexplainable suffix backslash+n plus curly closing bracket from key
  set_fact:
    api_hasura_jwt_secret: "{{ api_hasura_jwt_secret_decoded.split('\n')[0] }}"

- name: show key for debugging
  debug:
    var:
      api_hasura_jwt_secret

- name: set hasura env variable
  set_fact:
    hasura_env:
      HASURA_GRAPHQL_DATABASE_URL:     "postgres://{{ api_user }}:{{ api_user_password }}@{{ fworch_db_host }}:{{ fworch_db_port }}/{{ fworch_db_name }}"
      HASURA_GRAPHQL_ENABLE_CONSOLE:   "true"
      HASURA_GRAPHQL_ENABLE_TELEMETRY: "false"
      HASURA_GRAPHQL_ADMIN_SECRET:     "{{ api_hasura_admin_secret }}"
      HASURA_GRAPHQL_JWT_SECRET:       '
                                        {
                                          "type": "{{ api_hasura_jwt_alg|quote }}",
                                          "key": "{{ api_hasura_jwt_secret | quote }}",
                                          "claims_namespace_path": "$"
                                        }
      '
      HTTP_PROXY:                      "{{ http_proxy }}"
      HTTPS_PROXY:                     "{{ https_proxy }}"

- name: show hasura env for debugging
  debug:
    var:
      hasura_env

- name: start hasura container
  docker_container:
    name: "{{ api_container_name }}"
    image: hasura/graphql-engine:{{ api_hasura_version }}
    state: started
    network_mode: host
    log_driver: syslog
    log_options:
      syslog-address: "{{ syslog_proto }}://{{ syslog_host }}:514"
      syslog-facility: daemon
      tag: "{{ api_container_name }}"
    recreate: yes
    ports:
      - "{{ api_hostname }}:{{ api_port }}:{{ api_port }}"
    env:
      "{{ hasura_env }}"
  become: yes
  become_user: "{{ fworch_user }}"

- name: copy hasura docker systemd service script
  template:
     src: hasura-docker-api.service.j2
     dest: "/lib/systemd/system/hasura-docker-api.service"
     backup: yes
     mode: "0644"
     owner: "root"
  become: yes

- name: make hasura docker container runs at host startup
  command: "systemctl enable hasura-docker-api"
  become: yes
