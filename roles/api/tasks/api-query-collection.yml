# create query collection for basic tasks fworch_basics
# via direct hasura DB access
# source: https://plkmarudny.hashnode.dev/importing-json-array-into-the-postgres-jsonb-column-cjwuex4dv003os9s1u97c58n2?guid=none&deviceId=385c42a7-7fc2-4dcd-bbcc-b59e01215eae

- set_fact:
    query_collection_dict:
      - basic:
        collection_name: basic
        comment: "basic queries"
        query_json_file: "api-queries-report-basic-squashed.json"
      - filters:
        collection_name: filters
        comment: "filter queries"
        query_file: "api-queries-report-filters-squashed.json"
      - rule:
        collection_name: rule
        comment: "rule queries"
        query_file: "api-queries-report-rule-squashed.json"

- name: copy query files to target
  copy:
    src: "query-collections"
    dest: "{{ api_home }}/"
    owner: "{{ fworch_user }}"
    group: "{{ fworch_user }}"
  become: yes

- name: removeline breaks and multiple consecutive spaces from json files
  shell: "cat api-queries-report-{{ item.collection_name }}.json | tr -s '[:space:]' | tr -d '\n' > {{ item.query_json_file }}"
  become: yes
  become_user: "{{ fworch_user }}"
  args:
    chdir: "{{ api_home }}/query-collections/reporting"
    creates: "{{ api_home }}/query-collections/reporting/{{ item.query_json_file }}"
  loop: "{{ query_collection_dict }}"

- name: create sql command files from template for adding query collections
  template:
    src: "api-set-queries.sql.j2"
    dest: "{{ api_home }}/query-collections/reporting/api-set-queries-{{ item.collection_name }}.sql"
    mode: 0644
    owner: "{{ fworch_user }}"
    group: "{{ fworch_user }}"
  become: yes
  loop: "{{ query_collection_dict }}"

- block:
    - name: create .pgpass file
      lineinfile:
        path: "{{ fworch_home }}/.pgpass"
        create: yes
        mode: 0600
        line: "{{ fworch_db_host }}:{{ fworch_db_port }}:{{ fworch_db_name }}:{{ fworch_dbadmin_name }}:{{ dbadmin_pwd }}"

    - name: execute sql command files for adding query collections
      command: 'psql -h {{ fworch_db_host }} -U {{ fworch_dbadmin_name }} -d {{ fworch_db_name }} -c "\i {{ api_home }}/query-collections/api-set-queries-{{ item.collection_name }}.sql"'
      become: yes
      loop: "{{ query_collection_dict }}"

    - name: clean up .pgpass file
      file:
        path: "{{ fworch_home }}/.pgpass"
        state: absent

  become: yes
  become_user: "{{ fworch_user }}"
