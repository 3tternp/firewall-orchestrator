# this playbook sets up some sample devices with configs to play around with
# postgresql-client

# - name: create import sample user and copy configs
#   include_tasks: setup-sample-import.yml

- name: install packages necessary for testing
  package:
    name: "{{ item }}"
    state: present
  loop: "{{ test_packages }}"
  become: yes
  environment: "{{ proxy_env }}"

- name: initialize handler for deleting test data
  set_fact:
    test_importer_handler_guard: start
  changed_when: true
  notify:
  - test importer handler

- name: randomize test names to avoid interference with production data
  set_fact:
    test_postfix: "test_{{ random_generated_pw }}"

- name: include test data
  include_role:
    name: sample-data
  vars:
    sample_role_purpose: test
    sample_fortigate_name: "{{ test_fortigate_name }}"
    sample_config_user: fworchtest
    sample_config_user_home: "/home/{{ sample_config_user }}"
#    import_sample_server: localhost
  when: "'sampleserver' in group_names"

- name: include test auth data
  include_role:
    name: sample-auth-data
  vars:
    sample_postfix: "{{ test_postfix }}"
    sample_role_purpose: test
#    middleware_ldif_dir: "{{ fworch_home }}/etc/ldif" #gebraucht
#    openldap_url: "ldaps://{{ openldap_server }}" #gebraucht
#    openldap_server: "127.0.0.1"
#    openldap_superuser_dn: "cn=Manager,ou=systemuser,ou=user,{{ openldap_path }}" #gebraucht
#    openldap_path: "dc=fworch,dc=internal"
#    ldap_manager_pwd: "???" #kommt in Rolle middleware als setfact vor
  when: "'middlewareserver' in group_names"

- name: database testing
  import_tasks: test-database.yml

- name: auth testing
  import_tasks: test-auth.yml
  when: not without_sample_data | bool

- name: api testing
  import_tasks: test-api.yml
  when: not without_sample_data | bool

- name: csharp testing
  import_tasks: test-csharp.yml
  when: not without_sample_data | bool

- name: imorter testing
  import_tasks: test-importer.yml
  when: "'sampleserver' in group_names"

# - name: remove all test data
#   import_tasks: test-data-cleanup.yml
#   when: test == 'with_cleanup'

# - name: remove packages only necessary for testing
#   package:
#     name: "{{ item }}"
#     state: absent
#   loop: "{{ test_packages }}"
#   become: yes

- name: finalize handler for deleting test data
  set_fact:
    test_importer_handler_guard: stop
  changed_when: true
  notify: "test importer handler"
