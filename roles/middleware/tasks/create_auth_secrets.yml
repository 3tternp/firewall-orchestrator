- block:  
    - name: make sure secrets dir exists
      file:
        path: "{{ fworch_home }}/etc/secrets"
        state: directory
        mode: "0700"
        owner: "{{ fworch_user }}"
        group: "{{ fworch_user }}"

    - name: read ldap manager pwd from file
      slurp:
        src: "{{ fworch_home }}/etc/secrets/ldap_manager_pw.txt"
      register: ldap_manager_secret_dict

    - name: decode ldap manager pwd
      set_fact:
        ldap_manager_pwd: "{{ ldap_manager_secret_dict['content'] | b64decode }}"

# This does not happen anymore
#    - name: remove unwanted and unexplainable suffix backslash+n plus curly closing bracket from key
#      set_fact:
#        ldap_manager_pwd: "{{ ldap_manager_pwd_decoded.split('\n')[0] }}"

      # todo: remove
    - name: test
      debug:
        var: ldap_manager_pwd

    # we need the public key during api install
    # private key needed only on the middleware server, public key on ui & api

    # creates a .pem keyfile including both private and public key in base64
    - name: Generate JWT private key 
      openssl_privatekey:
        path: "{{ jwt_private_key_file }}"
        size: 2048
        owner: "{{ fworch_user }}"
        group: "{{ fworch_user }}"
        mode: "0600"
        backup: yes
      become: yes
        
    - name: Generate JWT public key in PEM format
      openssl_publickey:
        path: "{{ jwt_public_key_file }}"
        privatekey_path: "{{ jwt_private_key_file }}"
        owner: "{{ fworch_user }}"
        group: "{{ fworch_user }}"
        mode: "0644"
      become: yes

    - name: overwrite random private key with fixed test key
      copy:
        src: jwt_test_private_key.pem
        dest: "{{ jwt_private_key_file }}"
        owner: "{{ fworch_user }}"
        group: "{{ fworch_user }}"
        mode: "0600"
      become: yes
      when: testkeys is defined and testkeys == 'yes'

    - name: overwrite random public key with fixed test key
      copy:
        src: jwt_test_public_key.pem
        dest: "{{ jwt_public_key_file }}"
        owner: "{{ fworch_user }}"
        group: "{{ fworch_user }}"
        mode: "0644"
      become: yes
      when: testkeys is defined and testkeys == 'yes'

    - name: create {{ auth_ldap_internal_readonly_user }} password
      set_fact:
        ldap_inspector_pw: "{{ random_generated_pw }}"

    - name: create {{ middleware_ldap_writer }} password
      set_fact:
        ldap_writer_pw: "{{ random_generated_pw }}"

  become: yes
